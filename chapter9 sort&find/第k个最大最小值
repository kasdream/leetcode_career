215. Kth Largest Element in an Array
Medium

Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

Example 1:

Input: [3,2,1,5,6,4] and k = 2
Output: 5

Example 2:

Input: [3,2,3,1,2,4,5,5,6] and k = 4
Output: 4

堆排序
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        if (nums.size() == 0 || k > nums.size() || k == 0) return -1;        
        priority_queue<int, vector<int>, less<int>> max_heap;
        for (int i = 0; i < nums.size(); i++){
            max_heap.push(nums[i]);
        }
        if (k == 1) return max_heap.top();
        while (k > 1){
            max_heap.pop();
            k--;
        }
        return max_heap.top();
    }
};

快速排序
class Solution {
public:
     int findKLargestElement(int k, vector<int>& nums, int low, int high) {
        int left = low;
        int right = high;
        int key = nums[left];
        while (left < right) {
            while (left < right && nums[right] < key) --right;
            nums[left] = nums[right];
            while (left < right && nums[left] >= key) ++left;
            nums[right] = nums[left];
        }
        nums[left] = key;
        if (left < (k-1)) {
            return findKLargestElement(k, nums, left+1, high);
        }
        else if (left > (k-1)) {
            return findKLargestElement(k, nums, low, left-1);
        }
        else {
            return key;
        }
    }
    int findKthLargest(vector<int>& nums, int k) {
        return findKLargestElement(k, nums, 0, nums.size()-1);
    }
